version: "3.2"
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: ${RMQ_HOST}

    env_file:
      - .env
    ports:
      - 5672:5672
      - 15672:15672

    environment:
      RABBITMQ_DEFAULT_USER: ${RMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RMQ_PASS}

    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/
    networks:
      - rabbitmq_network

    restart: on-failure

  postgres:
    image: postgres
    container_name: postgres
    hostname: postgres

    env_file:
      - .env
    ports:
      - 5432:5432

    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}

    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - postgres_network

    restart: on-failure

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4

    logging:
      driver: none

    env_file:
      - .env
    ports:
      - "5050:80"

    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASS}

    networks:
      - postgres_network

    restart: on-failure

  gateway:
    image: gateway
    container_name: gateway

    build:
      context: ./apps/gateway

    env_file:
      - .env
    ports:
      - 8000:8000

    depends_on:
      - rabbitmq
    networks:
      - rabbitmq_network

    restart: on-failure

  clients-service:
    image: clients-service
    container_name: clients-service

    build:
      context: ./apps/clients-service

    env_file:
      - .env

    environment:
      RMQ_USER: ${RMQ_USER}
      RMQ_PASS: ${RMQ_PASS}

      TYPEORM_HOST: postgres
      TYPEORM_PORT: 5432

      TYPEORM_USERNAME: ${POSTGRES_USER}
      TYPEORM_PASSWORD: ${POSTGRES_PASS}
      TYPEORM_DATABASE: ${POSTGRES_DB}

    depends_on:
      - rabbitmq
      - postgres
    networks:
      - rabbitmq_network
      - postgres_network

    restart: unless-stopped

  accounts-service:
    image: accounts-service
    container_name: accounts-service

    build:
      context: ./apps/accounts-service

    env_file:
      - .env

    environment:
      RMQ_USER: ${RMQ_USER}
      RMQ_PASS: ${RMQ_PASS}

    depends_on:
      - rabbitmq
      - postgres
    networks:
      - rabbitmq_network
      - postgres_network

    restart: unless-stopped

  transactions-service:
    image: transactions-service
    container_name: transactions-service

    build:
      context: ./apps/transactions-service

    env_file:
      - .env

    environment:
      RMQ_USER: ${RMQ_USER}
      RMQ_PASS: ${RMQ_PASS}

    depends_on:
      - rabbitmq
      - postgres
    networks:
      - rabbitmq_network
      - postgres_network

    restart: unless-stopped

  auth-service:
    image: auth-service
    container_name: auth-service

    build:
      context: ./apps/auth-service

    env_file:
      - .env

    environment:
      RMQ_USER: ${RMQ_USER}
      RMQ_PASS: ${RMQ_PASS}

      TYPEORM_HOST: postgres
      TYPEORM_PORT: 5432

      TYPEORM_USERNAME: ${POSTGRES_USER}
      TYPEORM_PASSWORD: ${POSTGRES_PASS}
      TYPEORM_DATABASE: ${POSTGRES_DB}

      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      ACCESS_TOKEN_EXPIRE: ${ACCESS_TOKEN_EXPIRE}
      REFRESH_TOKEN_EXPIRE: ${REFRESH_TOKEN_EXPIRE}

    depends_on:
      - rabbitmq
      - postgres
    networks:
      - rabbitmq_network
      - postgres_network

    restart: unless-stopped

volumes:
  rabbitmq_data:
  rabbitmq_log:

  postgres_data:

networks:
  rabbitmq_network:
    driver: bridge

  postgres_network:
    driver: bridge
